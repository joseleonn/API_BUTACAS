// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Model.Models
{
    public partial class EstudioDeDanzasContext : DbContext
    {
        public EstudioDeDanzasContext()
        {
        }

        public EstudioDeDanzasContext(DbContextOptions<EstudioDeDanzasContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Butacas> Butacas { get; set; }
        public virtual DbSet<Funcion> Funcion { get; set; }
        public virtual DbSet<Platea> Platea { get; set; }
        public virtual DbSet<Reservas> Reservas { get; set; }
        public virtual DbSet<Tokens> Tokens { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Butacas>(entity =>
            {
                entity.HasKey(e => e.IdButaca);

                entity.Property(e => e.IdButaca).HasColumnName("Id_Butaca");

                entity.Property(e => e.IdFuncion).HasColumnName("Id_Funcion");

                entity.Property(e => e.IdPlatea).HasColumnName("Id_Platea");

                entity.Property(e => e.NroButaca).HasColumnName("Nro_Butaca");

                entity.HasOne(d => d.IdFuncionNavigation)
                    .WithMany(p => p.Butacas)
                    .HasForeignKey(d => d.IdFuncion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Butacas_Funcion");

                entity.HasOne(d => d.IdPlateaNavigation)
                    .WithMany(p => p.Butacas)
                    .HasForeignKey(d => d.IdPlatea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Butacas_Platea");
            });

            modelBuilder.Entity<Funcion>(entity =>
            {
                entity.HasKey(e => e.IdFuncion);

                entity.Property(e => e.IdFuncion)
                    .ValueGeneratedNever()
                    .HasColumnName("Id_Funcion");

                entity.Property(e => e.TipoFuncion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("Tipo_Funcion");
            });

            modelBuilder.Entity<Platea>(entity =>
            {
                entity.HasKey(e => e.IdPlatea);

                entity.Property(e => e.IdPlatea)
                    .ValueGeneratedNever()
                    .HasColumnName("Id_Platea");

                entity.Property(e => e.IdFuncion).HasColumnName("Id_Funcion");

                entity.Property(e => e.TipoPlatea)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("Tipo_Platea")
                    .IsFixedLength();

                entity.HasOne(d => d.IdFuncionNavigation)
                    .WithMany(p => p.Platea)
                    .HasForeignKey(d => d.IdFuncion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Platea_Funcion");
            });

            modelBuilder.Entity<Reservas>(entity =>
            {
                entity.HasKey(e => e.IdReserva);

                entity.Property(e => e.IdReserva).HasColumnName("Id_Reserva");

                entity.Property(e => e.IdButaca).HasColumnName("Id_Butaca");

                entity.Property(e => e.IdFuncion).HasColumnName("Id_Funcion");

                entity.Property(e => e.TokenCreated)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsFixedLength();

                entity.HasOne(d => d.IdButacaNavigation)
                    .WithMany(p => p.Reservas)
                    .HasForeignKey(d => d.IdButaca)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Reservas_Butacas");

                entity.HasOne(d => d.IdFuncionNavigation)
                    .WithMany(p => p.Reservas)
                    .HasForeignKey(d => d.IdFuncion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Reservas_Funcion");

                entity.HasOne(d => d.TokenCreatedNavigation)
                    .WithMany(p => p.Reservas)
                    .HasForeignKey(d => d.TokenCreated)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Reservas_Tokens");
            });

            modelBuilder.Entity<Tokens>(entity =>
            {
                entity.HasKey(e => e.TokenCreated);

                entity.Property(e => e.TokenCreated)
                    .HasMaxLength(255)
                    .IsFixedLength();

                entity.Property(e => e.CreateDate).HasColumnType("datetime");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}