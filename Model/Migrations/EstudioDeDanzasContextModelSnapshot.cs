// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Models;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(EstudioDeDanzasContext))]
    partial class EstudioDeDanzasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Models.PlateaAltaFuncion1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Butaca")
                        .HasColumnType("int");

                    b.Property<int>("Fila")
                        .HasColumnType("int");

                    b.Property<bool>("Reservado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PlateaAltaFuncion1s");
                });

            modelBuilder.Entity("Model.Models.PlateaAltaFuncion2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Butaca")
                        .HasColumnType("int");

                    b.Property<int>("Fila")
                        .HasColumnType("int");

                    b.Property<bool>("Reservado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PlateaAltaFuncion2s");
                });

            modelBuilder.Entity("Model.Models.PlateaBajaFuncion1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Butaca")
                        .HasColumnType("int");

                    b.Property<int>("Fila")
                        .HasColumnType("int");

                    b.Property<bool>("Reservado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PlateaBajaFuncion1s");
                });

            modelBuilder.Entity("Model.Models.PlateaBajaFuncion2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Butaca")
                        .HasColumnType("int");

                    b.Property<int>("Fila")
                        .HasColumnType("int");

                    b.Property<bool>("Reservado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PlateaBajaFuncion2s");
                });

            modelBuilder.Entity("Model.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<string>("TokenCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TokenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeatId");

                    b.HasIndex("TokenId");

                    b.ToTable("Reservations", (string)null);
                });

            modelBuilder.Entity("Model.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Reserved")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__SEAT__3214EC07E2E995BA");

                    b.ToTable("SEAT", (string)null);
                });

            modelBuilder.Entity("Model.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedTickets")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TokenCreated")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("UsedTickets")
                        .HasColumnType("int");

                    b.Property<bool?>("ValidToken")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__TOKENS__3214EC07FC250BEF");

                    b.ToTable("TOKENS", (string)null);
                });

            modelBuilder.Entity("Model.Models.Reservation", b =>
                {
                    b.HasOne("Model.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Models.Token", "Token")
                        .WithMany("Reservations")
                        .HasForeignKey("TokenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seat");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("Model.Models.Token", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
